{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krish\\\\OneDrive\\\\Desktop\\\\functional-playground-final\\\\frontend\\\\src\\\\ChartDisplay.js\";\nimport React from \"react\";\nimport { Chart as ChartJS, BarElement, LineElement, ArcElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from \"chart.js\";\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\n\n// Register required chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, LineElement, ArcElement, PointElement, CategoryScale, LinearScale, Tooltip, Legend);\n\n// Utility: generate distinct colors\nconst generateColors = count => {\n  const baseColors = [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#8AFFC1\", \"#FF9F40\", \"#DDA0DD\", \"#87CEFA\", \"#32CD32\", \"#E6E6FA\", \"#90EE90\"];\n  return Array.from({\n    length: count\n  }, (_, i) => baseColors[i % baseColors.length]);\n};\n\n// Main component\nconst ChartDisplay = ({\n  data,\n  chartType,\n  labels: customLabels,\n  compact = false\n}) => {\n  // Error handling\n  if (!Array.isArray(data)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u26A0\\uFE0F Error: Output is not an array. Visualization is only possible for arrays.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  if (data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u26A0\\uFE0F Error: Array is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (data.some(d => typeof d !== \"number\")) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u26A0\\uFE0F Error: Array must contain only numbers.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Generate labels and colors\n  const labels = customLabels || data.map((_, i) => `#${i + 1}`);\n  const colors = generateColors(data.length);\n\n  // ChartJS data structure\n  const chartData = {\n    labels,\n    datasets: [{\n      label: \"Result\",\n      data,\n      backgroundColor: chartType === \"pie\" ? colors : \"#36A2EB\",\n      borderColor: \"#2b2b2b\",\n      borderWidth: 1\n    }]\n  };\n\n  // ChartJS options\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: chartType === \"pie\"\n      },\n      title: {\n        display: true,\n        text: \"Output Visualization\"\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => `Value: ${tooltipItem.raw}`\n        }\n      }\n    }\n  };\n\n  // Size control\n  const chartHeight = compact ? 250 : 400;\n  const chartWidth = compact ? 400 : 800;\n  const wrapperStyle = {\n    maxWidth: compact ? \"400px\" : \"800px\",\n    maxHeight: compact ? \"300px\" : \"500px\",\n    margin: \"0 auto\"\n  };\n\n  // Render selected chart type\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: wrapperStyle,\n    children: [chartType === \"bar\" && /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options,\n      height: chartHeight,\n      width: chartWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), chartType === \"line\" && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options,\n      height: chartHeight,\n      width: chartWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), chartType === \"pie\" && /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: options,\n      height: chartHeight,\n      width: chartWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), ![\"bar\", \"line\", \"pie\"].includes(chartType) && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u26A0\\uFE0F Unsupported chart type: \", chartType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c = ChartDisplay;\nexport default ChartDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChartDisplay\");","map":{"version":3,"names":["React","Chart","ChartJS","BarElement","LineElement","ArcElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","Bar","Line","Pie","jsxDEV","_jsxDEV","register","generateColors","count","baseColors","Array","from","length","_","i","ChartDisplay","data","chartType","labels","customLabels","compact","isArray","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","some","d","map","colors","chartData","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","display","title","text","tooltip","callbacks","tooltipItem","raw","chartHeight","chartWidth","wrapperStyle","maxWidth","maxHeight","margin","height","width","includes","_c","$RefreshReg$"],"sources":["C:/Users/krish/OneDrive/Desktop/functional-playground-final/frontend/src/ChartDisplay.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  LineElement,\r\n  ArcElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend\r\n} from \"chart.js\";\r\nimport { Bar, Line, Pie } from \"react-chartjs-2\";\r\n\r\n// Register required chart.js components\r\nChartJS.register(\r\n  BarElement,\r\n  LineElement,\r\n  ArcElement,\r\n  PointElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// Utility: generate distinct colors\r\nconst generateColors = (count) => {\r\n  const baseColors = [\r\n    \"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#8AFFC1\", \"#FF9F40\",\r\n    \"#DDA0DD\", \"#87CEFA\", \"#32CD32\", \"#E6E6FA\", \"#90EE90\"\r\n  ];\r\n  return Array.from({ length: count }, (_, i) => baseColors[i % baseColors.length]);\r\n};\r\n\r\n// Main component\r\nconst ChartDisplay = ({ data, chartType, labels: customLabels, compact = false }) => {\r\n  // Error handling\r\n  if (!Array.isArray(data)) {\r\n    return <p style={{ color: \"red\" }}>⚠️ Error: Output is not an array. Visualization is only possible for arrays.</p>;\r\n  }\r\n  if (data.length === 0) {\r\n    return <p style={{ color: \"red\" }}>⚠️ Error: Array is empty.</p>;\r\n  }\r\n  if (data.some(d => typeof d !== \"number\")) {\r\n    return <p style={{ color: \"red\" }}>⚠️ Error: Array must contain only numbers.</p>;\r\n  }\r\n\r\n  // Generate labels and colors\r\n  const labels = customLabels || data.map((_, i) => `#${i + 1}`);\r\n  const colors = generateColors(data.length);\r\n\r\n  // ChartJS data structure\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Result\",\r\n        data,\r\n        backgroundColor: chartType === \"pie\" ? colors : \"#36A2EB\",\r\n        borderColor: \"#2b2b2b\",\r\n        borderWidth: 1\r\n      }\r\n    ]\r\n  };\r\n\r\n  // ChartJS options\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { display: chartType === \"pie\" },\r\n      title: {\r\n        display: true,\r\n        text: \"Output Visualization\"\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (tooltipItem) => `Value: ${tooltipItem.raw}`\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Size control\r\n  const chartHeight = compact ? 250 : 400;\r\n  const chartWidth = compact ? 400 : 800;\r\n  const wrapperStyle = {\r\n    maxWidth: compact ? \"400px\" : \"800px\",\r\n    maxHeight: compact ? \"300px\" : \"500px\",\r\n    margin: \"0 auto\"\r\n  };\r\n\r\n  // Render selected chart type\r\n  return (\r\n    <div style={wrapperStyle}>\r\n      {chartType === \"bar\" && (\r\n        <Bar data={chartData} options={options} height={chartHeight} width={chartWidth} />\r\n      )}\r\n      {chartType === \"line\" && (\r\n        <Line data={chartData} options={options} height={chartHeight} width={chartWidth} />\r\n      )}\r\n      {chartType === \"pie\" && (\r\n        <Pie data={chartData} options={options} height={chartHeight} width={chartWidth} />\r\n      )}\r\n      {![\"bar\", \"line\", \"pie\"].includes(chartType) && (\r\n        <p>⚠️ Unsupported chart type: {chartType}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}